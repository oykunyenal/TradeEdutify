// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TradeEdutify.Persistence.Context;

#nullable disable

namespace TradeEdutify.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231126152559_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TradeEdutify.Domain.Entities.Portfolio", b =>
                {
                    b.Property<long>("PortfolioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PortfolioID"));

                    b.Property<DateTimeOffset>("OperationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ShareID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("PortfolioID");

                    b.HasIndex("ShareID");

                    b.HasIndex("UserID");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("TradeEdutify.Domain.Entities.Share", b =>
                {
                    b.Property<long>("ShareID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ShareID"));

                    b.Property<DateTimeOffset>("LastUpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Rate")
                        .HasColumnType("double precision");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ShareID");

                    b.ToTable("Share");

                    b.HasData(
                        new
                        {
                            ShareID = 100L,
                            LastUpdateDate = new DateTimeOffset(new DateTime(2023, 11, 26, 18, 25, 59, 820, DateTimeKind.Unspecified).AddTicks(5352), new TimeSpan(0, 3, 0, 0, 0)),
                            Rate = 45.43,
                            Symbol = "AGT"
                        },
                        new
                        {
                            ShareID = 101L,
                            LastUpdateDate = new DateTimeOffset(new DateTime(2023, 11, 26, 18, 25, 59, 820, DateTimeKind.Unspecified).AddTicks(5386), new TimeSpan(0, 3, 0, 0, 0)),
                            Rate = 30.16,
                            Symbol = "THY"
                        },
                        new
                        {
                            ShareID = 102L,
                            LastUpdateDate = new DateTimeOffset(new DateTime(2023, 11, 26, 18, 25, 59, 820, DateTimeKind.Unspecified).AddTicks(5388), new TimeSpan(0, 3, 0, 0, 0)),
                            Rate = 70.319999999999993,
                            Symbol = "EGS"
                        },
                        new
                        {
                            ShareID = 103L,
                            LastUpdateDate = new DateTimeOffset(new DateTime(2023, 11, 26, 18, 25, 59, 820, DateTimeKind.Unspecified).AddTicks(5390), new TimeSpan(0, 3, 0, 0, 0)),
                            Rate = 120.76000000000001,
                            Symbol = "ODR"
                        },
                        new
                        {
                            ShareID = 104L,
                            LastUpdateDate = new DateTimeOffset(new DateTime(2023, 11, 26, 18, 25, 59, 820, DateTimeKind.Unspecified).AddTicks(5392), new TimeSpan(0, 3, 0, 0, 0)),
                            Rate = 12.1,
                            Symbol = "VHY"
                        });
                });

            modelBuilder.Entity("TradeEdutify.Domain.Entities.Transaction", b =>
                {
                    b.Property<long>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TransactionID"));

                    b.Property<DateTimeOffset>("OperationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long>("ShareID")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalOperationPrice")
                        .HasColumnType("double precision");

                    b.Property<int>("TradeType")
                        .HasColumnType("integer");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("double precision");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("TransactionID");

                    b.HasIndex("ShareID");

                    b.HasIndex("UserID");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("TradeEdutify.Domain.Entities.User", b =>
                {
                    b.Property<long>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserID"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserID = 100L,
                            Username = "Ethan Hayes"
                        },
                        new
                        {
                            UserID = 101L,
                            Username = "Olivia Foster"
                        },
                        new
                        {
                            UserID = 102L,
                            Username = "Amelia Rodriguez"
                        },
                        new
                        {
                            UserID = 103L,
                            Username = "Sophia Chang"
                        },
                        new
                        {
                            UserID = 104L,
                            Username = "Jackson Bennett"
                        });
                });

            modelBuilder.Entity("TradeEdutify.Domain.Entities.Portfolio", b =>
                {
                    b.HasOne("TradeEdutify.Domain.Entities.Share", "Share")
                        .WithMany("Portfolios")
                        .HasForeignKey("ShareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TradeEdutify.Domain.Entities.User", "User")
                        .WithMany("Portfolios")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Share");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TradeEdutify.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("TradeEdutify.Domain.Entities.Share", null)
                        .WithMany("Transactions")
                        .HasForeignKey("ShareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TradeEdutify.Domain.Entities.User", null)
                        .WithMany("Transactions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TradeEdutify.Domain.Entities.Share", b =>
                {
                    b.Navigation("Portfolios");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("TradeEdutify.Domain.Entities.User", b =>
                {
                    b.Navigation("Portfolios");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
